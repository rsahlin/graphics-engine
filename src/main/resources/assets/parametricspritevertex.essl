/* Copyright 2015 Richard Sahlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
 * Vertex shader for tiled sprite renderer
 * @author Richard Sahlin
 */
#version 100

//Put array declaration after name for GLSL compatibility
uniform mat4 uMVMatrix;
uniform mat4 uProjectionMatrix;

attribute vec3 aVertex; //vertex position
attribute vec2 aTexCoord;
attribute vec3 aTranslate; //sprite x, sprite y, sprite z
attribute vec3 aRotate;
attribute vec3 aScale;
attribute vec4 aColor;
attribute vec4 aFrameData;

varying vec4 color;
varying vec2 xy;
varying vec4 data;

mat3 calculateTransformMatrix(vec3 rotate, vec3 scale);

void main() {
    vec4 pos = uMVMatrix * (vec4(aTranslate.x, aTranslate.y, aTranslate.z, 1.0) + vec4(calculateTransformMatrix(aRotate, aScale) * aVertex, 0.0));
    gl_Position = uProjectionMatrix * pos;
    color = aColor;
    xy = aTexCoord;
    data = aFrameData;
}
